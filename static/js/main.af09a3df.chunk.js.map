{"version":3,"sources":["assets/bg.jpg","assets/logo.svg","containers/App/style.js","containers/LandingPage/style.js","containers/LandingPage/index.js","components/Header/style.js","components/Header/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppContainer","styled","div","_templateObject","LandingPageContainer","style_templateObject","img","LandingPage","react_default","a","createElement","className","align","build_default","start","end","delay","_ref","countUpRef","ref","_ref2","_ref3","Component","HeaderContainer","Header_style_templateObject","Header","href","src","logo","alt","type","data-toggle","data-target","id","React","App","components_Header","containers_LandingPage","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af09a3df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.d4f87428.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2443aeb5.svg\";","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n    font-family: 'Fira Sans', sans-serif;\n    position: relative;\n    background-color: #fff;\n    min-height: 100vh;\n`;","import styled from 'styled-components';\nimport img from 'assets/bg.jpg'\n\nexport const LandingPageContainer = styled.div`\n    font-family: 'Fira Sans', sans-serif;\n    position: relative;\n    color: #122541;\n    background: url(${img}) no-repeat no-repeat center;\n    background-size: cover;\n    min-height: 100vh;\n\n    .landing-page-container {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-height: calc(100vh - 66px);\n      flex-direction: column;\n    }\n\n    .promotion-text {\n      font-size: 3.5rem;\n      font-weight: 600;\n      margin-bottom: 2rem;\n      margin-top: 2rem;\n    }\n\n    .client-group {\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      min-width: 240px;\n    }\n\n    .current-client-text {\n      padding-bottom: 6rem;\n    }\n\n    .client-group p {\n      text-align: center;\n    }\n\n    .client-group .total-client {\n      font-weight: 600;\n      font-size: 3rem;\n      color: #33BEEF;\n    }\n\n    .total-client:after {\n      content: '+';\n      color: #122541;\n      font-size: 3.5rem;\n    }\n\n    .client-group .client-name {\n      font-size: 1.2rem;\n    }\n\n    @media screen and (max-width: 767px) {\n      .promotion-text {\n        padding-top: 6rem;\n      }\n\n      .current-client-text {\n        justify-content: center!important;\n      }\n\n    }\n\n`;","import React, { Component } from 'react';\nimport CountUp from 'react-countup';\n\nimport { LandingPageContainer } from './style';\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <LandingPageContainer>\n        <div className=\"landing-page-container\">\n          <h1 className=\"promotion-text\" align=\"center\">Assisting Companies Since 2016</h1>\n          <div className=\"current-client-text d-flex justify-content-between flex-wrap\">\n            <div className=\"client-group\">\n              <CountUp start={0} end={4000} delay={0}>\n                {({ countUpRef }) => (\n                  <div>\n                    <p ref={countUpRef} className=\"total-client\"></p>\n                  </div>\n                )}\n              </CountUp>\n              <p className=\"client-name\">Applicants Applied</p>\n            </div>\n            <div className=\"client-group\">\n              <CountUp start={0} end={2000} delay={0}>\n                {({ countUpRef }) => (\n                  <div>\n                    <p ref={countUpRef} className=\"total-client\"></p>\n                  </div>\n                )}\n              </CountUp>\n              <p className=\"client-name\">Candidates Hired</p>\n            </div>\n            <div className=\"client-group\">\n              <CountUp start={0} end={5000} delay={0}>\n                {({ countUpRef }) => (\n                  <div>\n                    <p ref={countUpRef} className=\"total-client\"></p>\n                  </div>\n                )}\n              </CountUp>\n              <p className=\"client-name\">Company Subscriptions</p>\n            </div>\n          </div>\n        </div>\n      </LandingPageContainer>\n    );\n  }\n}\n\nexport default LandingPage;\n","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.div`\r\n    font-family: 'Fira Sans', sans-serif;\r\n\r\n    .logo {\r\n        width: 200px;\r\n        height: 40px;\r\n    }\r\n\r\n    .bg-light {\r\n        background-color: #fff!important;\r\n        padding-left: 2rem;\r\n        padding-right: 2rem;\r\n    }\r\n\r\n    .navbar-expand-lg .navbar-nav .nav-link {\r\n        font-size: 16px;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n    }\r\n\r\n    .nav-link {\r\n        text-decoration: none;\r\n        background-image: linear-gradient(#122541, #122541);\r\n        background-size: 0 4px;\r\n        background-repeat: no-repeat;\r\n        background-position: center bottom;\r\n        transition: all .2s ease-out;\r\n    }\r\n\r\n    .nav-link:hover {\r\n        background-size: calc(100% - 2rem) 4px;\r\n    }\r\n\r\n    .vertical-line {\r\n        border-left: 1px solid grey;\r\n    }\r\n\r\n    .btn {\r\n        transition: 0.5s;\r\n        background-color: #07bc4c;\r\n        font-size: 16px;\r\n        padding-left: 1.5rem;\r\n        padding-right: 1.5rem;\r\n    }\r\n\r\n    .btn:hover {\r\n        transition: 0.5s;\r\n        background-color: #08d556;\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n        .bg-light {\r\n            padding-left: 0.5rem;\r\n            padding-right: 0.5rem;\r\n        }\r\n\r\n        .vertical-line {\r\n            border-left: none;\r\n        }\r\n\r\n        .navbar-expand-md .navbar-nav .nav-link {\r\n            padding-left: 0.5rem;\r\n            padding-right: 0.5rem;\r\n        }\r\n        .nav-link:hover {\r\n            background-size: 0 4px, auto;\r\n        }\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { HeaderContainer } from './style';\r\nimport logo from 'assets/logo.svg';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <HeaderContainer>\r\n        <header>\r\n          <nav className=\"navbar navbar-expand-lg bg-light fixed-top navbar-light\">\r\n            <a className=\"navbar-brand\" href=\"#\"><img className=\"logo\" src={logo} alt=\"logo\" /></a>\r\n\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavbar\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">Home</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">Products</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">Customers</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">Partners</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">Job Search</a>\r\n                </li>\r\n                <li className=\"nav-item vertical-line\">\r\n                  <a className=\"nav-link\" href=\"#\">Login</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <button className=\"btn btn-success\" type=\"submit\">Try for Free</button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </HeaderContainer>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\n\nimport { AppContainer } from './style';\nimport LandingPage from 'containers/LandingPage';\nimport Header from 'components/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <AppContainer>\n        <Header />\n        <LandingPage />\n      </AppContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}